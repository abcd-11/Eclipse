package get_middle_of_the_stack;
import java.util.Scanner;

public class Get_Middle_Of_The_Stack {
	static Node head=new Node();
	static Node tail=new Node();
	static Node middle=new Node();
	static int cn=0;
		public static void main(String args[])
		{
			Scanner sc=new Scanner(System.in);
			System.out.println("Enter the numbers::");
			String str=sc.nextLine();
			String st[]=str.split(" ");
			int len=st.length;
			
			for(int i=0;i<len;i++)
			{
				push_stack(Integer.parseInt(st[i]));
			}
			while(true)
			{
				System.out.println("Enter 1:pop 2:get_middle 3:delete_middle 4:exit");
				int n=Integer.parseInt(sc.nextLine());
				switch(n)
				{
					case 1:
					{
						pop();
						break;
					}
					case 2:
					{
						get_middle();
						break;
					}
					case 3:
					{
						delete_middle();
						break;
					}
					case 4:
					{
						System.exit(0);
					}
				}
			}
		}
		public static void push_stack(int key)
		{  cn++;
			if(head.getData() == null)
			{
				head.setData(key);
				tail=head;
				middle=head;
			}
			else
			{
				Node newNode=new Node();
				newNode.setData(key);
				
				tail.setNext(newNode);
				newNode.setPrev(tail);
				
				tail=newNode;
				
				if(cn%2!=0)
					middle=middle.getNext();
			}
		}
		public static void pop()
		{
			System.out.printf("The popped element is::%d\n",tail.getData());
			tail=tail.getPrev();
			if(tail!=null)
				tail.setNext(null);
			else
			{
				head.setData(null);
				tail.setData(null);
			}
			cn--;
			setMiddle();
		}
		public static void get_middle()
		{
			System.out.printf("The middle element is::%d\n",middle.getData());
		}
		public static void delete_middle()
		{
			Node temp=middle.getPrev();
			Node n=middle.getNext();
			if(temp!=null)
			temp.setNext(n);
			if(n!=null)
			n.setPrev(temp);
			cn--;
			setMiddle();
		}
		public static void setMiddle()
		{  if(cn==0)
			return;
			if(cn==1)
				middle=head;
			else
			{
			int y=cn/2;
			Node t=head;
			int g=1;
			while(g!=y)
			{
				t=t.getNext();
				g++;
			}
			middle=t;
			if(cn%2!=0)
				middle=middle.getNext();
			}
		}
}
